openapi: 3.0.3
info:
  title: Modul 294 LB B Backend
  version: 2.2.0
servers:
  - url: http://localhost:3000
paths:
  /tasks:
    get:      
      tags:
        - no authentication
      summary: List all tasks
      description: List all tasks
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Task"
    put:      
      tags:
        - no authentication
      summary: Update an existing task
      description: Update an existing task with Id
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Task"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
        "400":
          description: Invalid ID supplied
        "404":
          description: Task not found
    post:      
      tags:
        - no authentication
      summary: Add a new task
      description: Add a new task
      requestBody:
        description: Create a new task
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Task"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
        "400":
          description: Invalid input
  /task/{taskId}:
    get:
      tags:
        - no authentication
      summary: Find task by ID
      description: Returns a single task
      parameters:
        - name: taskId
          in: path
          description: ID of task to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
        "400":
          description: Invalid ID supplied
        "403":
          description: Unauthorized
        "404":
          description: Task not found
    delete:      
      tags:
        - no authentication
      summary: Deletes a task
      description: delete a task
      parameters:
        - name: taskId
          in: path
          description: Task id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "400":
          description: Invalid task value
        "403":
          description: Unauthorized
          
  /auth/cookie/tasks:
    get:      
      tags:
        - httpOnly cookie authentication
      security:
        - jwtAuth: []
      summary: List all tasks
      description: List all tasks
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Task"
        "401":
          description: Unauthorized
    put:      
      tags:
        - httpOnly cookie authentication
      security:
        - jwtAuth: []
      summary: Update an existing task
      description: Update an existing task by Id
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Task"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
        "400":
          description: Invalid ID supplied
        "401":
          description: Unauthorized
        "404":
          description: Task not found
    post:      
      tags:
        - httpOnly cookie authentication
      security:
        - jwtAuth: []
      summary: Add a new task
      description: Add a new task
      requestBody:
        description: Create a new task
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Task"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
        "401":
          description: Unauthorized
        "400":
          description: Invalid input
  /auth/cookie/task/{taskId}:
    get:
      tags:
        - httpOnly cookie authentication
      security:
        - jwtAuth: []
      summary: Find task by ID
      description: Returns a single task
      parameters:
        - name: taskId
          in: path
          description: ID of task to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
        "400":
          description: Invalid ID supplied
        "401":
          description: Unauthorized
        "404":
          description: Task not found
    delete:      
      tags:
        - httpOnly cookie authentication
      security:
        - jwtAuth: []
      summary: Deletes a task
      description: delete a task
      parameters:
        - name: taskId
          in: path
          description: Task id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "400":
          description: Invalid task value
        "401":
          description: Unauthorized
  /auth/cookie/login:
    post:
      tags:
        - httpOnly cookie authentication
      security:
        - jwtAuth: []
      summary: Logs user into the system
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "info@example.com"
                password:
                  type: string
                  example: "m294"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: string
                example: 'ok'
        "400":
          description: Invalid email/password supplied
  /auth/cookie/status:
    get:
      tags:
        - httpOnly cookie authentication
      security:
        - jwtAuth: []
      summary: Returns the email when logged in
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  email: 
                    type: string
                    example: user@example.com
        "401":
          description: Unauthorized
  /auth/cookie/logout:
    post:
      tags:
        - httpOnly cookie authentication
      summary: Logs out current logged in user session
      description: ""
      parameters: []
      responses:
        default:
          description: successful operation

          
  /auth/jwt/tasks:
    get:      
      tags:
        - jwt authentication
      security:
        - jwtAuth: []
      summary: List all tasks
      description: List all tasks
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Task"
        "401":
          description: Unauthorized
    put:      
      tags:
        - jwt authentication
      security:
        - jwtAuth: []
      summary: Update an existing task
      description: Update an existing task by Id
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Task"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
        "400":
          description: Invalid ID supplied
        "401":
          description: Unauthorized
        "404":
          description: Task not found
    post:      
      tags:
        - jwt authentication
      security:
        - jwtAuth: []
      summary: Add a new task
      description: Add a new task
      requestBody:
        description: Create a new task
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Task"
        required: true
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
        "401":
          description: Unauthorized
        "400":
          description: Invalid input
  /auth/jwt/task/{taskId}:
    get:
      tags:
        - jwt authentication
      security:
        - jwtAuth: []
      summary: Find task by ID
      description: Returns a single task
      parameters:
        - name: taskId
          in: path
          description: ID of task to return
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Task"
        "400":
          description: Invalid ID supplied
        "401":
          description: Unauthorized
        "404":
          description: Task not found
    delete:      
      tags:
        - jwt authentication
      security:
        - jwtAuth: []
      summary: Deletes a task
      description: delete a task
      parameters:
        - name: taskId
          in: path
          description: Task id to delete
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "400":
          description: Invalid task value
        "401":
          description: Unauthorized
  /auth/jwt/sign:
    post:
      tags:
        - jwt authentication
      summary: Generates jwt token
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: "info@example.com"
                password:
                  type: string
                  example: "m294"
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties: 
                  token:
                    type: string
                    example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImRpZWdvLnN0ZWluZXJAdGVzdC5jb20iLCJpYXQiOjE2NjE1MTE4NDV9.RpqenBNGG2DVlG2Y25SWdvEni8Q16ie9-tulRBSlzoo"
        "400":
          description: Invalid email/password supplied
  /auth/jwt/verify:
    get:
      tags:
        - jwt authentication
      summary: Returns the email when token is valid
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  email: 
                    type: string
                    example: user@example.com
        "401":
          description: Unauthorized

components:
  schemas:
    Task:
      type: object
      properties:
        id:
          type: integer
          example: 10
        completed:
          type: boolean
          example: false
        title:
          type: string
          example: "Feed pets"
  securitySchemes:
    jwtAuth:           
      type: http
      scheme: bearer
      bearerFormat: JWT
    cookieAuth:        
      type: apiKey
      in: cookie
      name: m294-session 
  requestBodies:
    Task:
      description: Task object that needs to be added to the list
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Task"
        application/xml:
          schema:
            $ref: "#/components/schemas/Task"
